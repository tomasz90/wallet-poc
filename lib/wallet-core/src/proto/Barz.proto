// Copyright Â© 2017-2023 Trust Wallet.
//
// This file is part of Trust. The full Trust copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";

package TW.Barz.Proto;
option java_package = "wallet.core.jni.proto";

// Represents the access control to the wallet
message ContractOwner {
  oneof kind {
    string public_key = 1;
    string attestation_object = 2;
  }
}

// Input parameters for calculating a counterfactual address for ERC-4337 based smart contract wallet
message ContractAddressInput {
  // Address of the contract factory
  string factory = 1;

  // Diamond proxy facets required for the contract setup
  string diamond_cut_facet = 2;
  string account_facet = 3;
  string verification_facet = 4;

  // ERC-4337 entry point
  string entry_point = 5;

  // Diamond Loupe from ERC-2535: Diamonds, Multi-Facet Proxy
  string diamond_loupe_facet = 6;

  // Diamond init from ERC-2535: Diamonds, Multi-Facet Proxy
  string diamond_init = 7;

  // Address of the contract that defines if a facet is secure
  string facet_registry = 8;

  // Bytecode of the smart contract to deploy
  string bytecode = 9;

  // Owner of the wallet
  ContractOwner owner = 10;
}
